plugins {
    id 'java'
    id 'maven-publish'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE' // Update to the latest version
    id 'org.springframework.boot' version '2.5.5' // Use a valid Spring Boot plugin version
    id 'net.researchgate.release' version '3.0.2'
    id 'com.palantir.docker' version '0.34.0'
    id 'com.palantir.docker-run' version '0.34.0'
    id 'jp.classmethod.aws.reboot.cloudformation' version '0.45'
}



repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation group: 'com.h2database', name: 'h2', version: '2.1.214'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}



test {
    useJUnitPlatform()
}




aws {
    region = findProperty('region') ?: 'us-central-1'
}

cloudFormation {
    stackName "$project.name-stack"
    stackParams([
            SubnetID: findProperty('subnetId') ?: '',
            ServiceName: project.name,
            ServiceVersion: project.version,
            DockerHubUsername: dockerHubUsernameProperty
    ])
    templateFile project.file("ecs.yml")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

task writeDockerImageNameToFile {
    doLast {
        new File("$buildDir/dockerImageName.txt").text = imageName
    }
}




task('doStuff', type: Copy) {
    println 'configuring task'
    doFirst {
        println 'running task'
    }
}